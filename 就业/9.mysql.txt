数据库入门
	引入
	数据保存到内存：
		优点：读写非常快
		缺点：程序关闭导致数据丢失
	数据保存到文件：
		优点：数据可以永久保存
		缺点：1.频繁地IO操作，效率不高。2.数据管理不方便。例如查询某个数据需要全部读取出来，再匹配。
	数据保存到数据库软件：1.数据永久保存下来。 2.数据管理非常方便。（例如查询非常快速和方便） 数据可以说是企业的灵魂！
数据库软件：
	数据库，俗称数据的仓库。方便管理数据的软件（或程序）	  
	市面上数据库软件
		关系型数据库:
			Oracle：甲骨文公司的产品。 当前最流行应用最广泛的数据库软件。和java语言兼容非常好。
					适合中大型，中大应用。
			SQL Server: 是微软公司的产品。window平台应用非常广泛。和c#，net平台兼容非常好。
			DB2： IBM公司的产品。IBM服务器--> UNIX -> DB2- > Websphere
			MySQL: 开源组织的产品。甲骨文公司的产品。免费和java语言兼容非常好适合中小企业，中小应用
		非关系型数据库:
			MongoDB

MySQL入门
	安装步骤：
		1.到mysql官网下载。
		2.安装mysql软件
		3.使用
			验证是否成功
			打开cmd  -> 输入 mysql -u root -p  回车   -> 输入密码   回车
			C:\Users\APPle>mysql -u root -p
	mysql数据存储结构：
			先数据库，再表，再有数据
	SQL语句的分类：		
		DDL： 数据定义语言
			create / drop / alter 	
		DML：数据操作语句
			insert / delete /update / truncate 	
		DQL： 数据查询语言：
			select / show 						
	数据库管理(以分号为一个命令的结束)：
		查询所有数据库：
			show databases;
				+--------------------+
				| Database           |
				+--------------------+
				| information_schema |    -- mysql元数据，基础数据
				| mysql              |    --mysql配置数据库，其中包含用户信息。（用户名和密码，权限管理）
				| performance_schema |    --mysql数据库软件的运行数据，日志信息，性能数据
				| test               |    --测试数据库。空的
				+--------------------+
		创建数据库：
			create database day15
				mysql> create database day15  -- 指定默认字符集创建数据库
	   			 -> default character set utf8
	   			 -> ;
		查看数据库的默认字符集：
			 show create database day15;
			 	+----------+----------------------------------------------------------------+
				| Database | Create Database                                                |
				+----------+----------------------------------------------------------------+
				| day15    | CREATE DATABASE `day15` /*!40100 DEFAULT CHARACTER SET utf8 */ |
				+----------+----------------------------------------------------------------+
		删除数据库：
			drop database day15;
		修改数据库：
			 alter database day15 default character set gbk;
	表管理：
		首先要选择数据库：
			use+数据库名称；
		查看所有表：
			 show tables;
		创建表：
			mysql> create table student[表名](
		    -> sid[字段名称] int(20)[字段类型],
		    -> sname varchar(20)[类型长度],
		    -> sage int(20)
		    -> );
		    注意：最后一个字段不要逗号
		查看表结构：
			 desc 表名称;
		删除表：
			 drop table 表名称;
		修改表：
			添加字段：
				alter table 表名称 add column 字段名称  字段类型(字段长度);
			删除字段：
				alter table 表名称   drop column 字段名称;
			修改字段类型和长度
				alter table 表名称    modify column 字段名称   varchar(100);
			修改字段名称
				alter table 表名称   change column 旧字段名称  新字段名称  varchar(2);
			修改表名称
				alter table student rename to teacher;
	增删改数据：
		增加数据：
			插入所有字段:
				insert into 表名称   values(1,'张三','男',20);
					插入所有字段。一定依次按顺序插入,注意不能少或多字段值
			插入部分字段:
				insert into 表名称(字段1,字段2) values(值1,值2);
		 修改数据
			修改所有数据（建议少用）
				update student set gender='女';
			带条件的修改（推荐使用）
				update student set gender='男' where id=1; -- 修改id为1的学生，修改性别为男
			修改多个字段,注意: SET 字段名=值,字段名=值,....
				update student set gender='男',age=30 WHERE id=2;
		删除数据
			删除所有数据（建议少用）
				DELETE FROM student;
			带条件的删除(推荐使用)
				DELETE FROM student WHERE id=2;
			delete from 和truncate table的区别：
				delete from：
					1.可以带条件删除  
					2.只能删除表的数据，不能删除表的约束     
					3.使用delete from删除的数据可以回滚（事务）
				truncate table: 
					1.只能全表删除 不能带条件删除
					2.即可以删除表的数据，也可以删除表的约束 
					3.使用truncate table删除的数据不能回滚
	查询数据（重点）:
		查询所有列
			select * from 表名称;
		查询指定列
			select 字段1,字段2,.. from 表名称;
		查询指定列时添加别名
			select 字段1 as'别名',字段2 as'别名',.. from 表名称 as'别名（不能为中文）';
				给表起别名时一般用在多表查询时，并且不能为中文
		查询时添加常量列
			SELECT id,NAME,gender,age,'java就业班' AS '年级'  FROM student;
			需求： 在查询student表时添加一个班级列，内容为“java就业班”
		 查询时合并列
			需求： 查询每个学生的servlet和jsp的总成绩
			SELECT id,NAME,(servlet+jsp) AS '总成绩' FROM student;
			注意：合并列只能合并数值类型的字段
		查询时去除重复记录(DISTINCT)
			需求： 查询学生的性别     男 女
			SELECT distinct gender FROM student;
			另一种语法：
			SELECT distinct(gender) FROM student;
		条件查询
			逻辑条件： and(与) or(或)
				 需求： 查询id为2，且姓名为李四的学生
					SELECT * FROM student WHERE id=2 AND NAME='李四'; -- 交集
				需求： 查询id为2，或姓名为张三的学生
					SELECT * FROM student WHERE id=2 OR NAME='张三'; -- 并集
			 比较条件： >   <   >=  <=  =  <>(不等于)    between and (等价于>= 且 <=)
				需求： 查询servlet成绩大于70分的学生
					SELECT * FROM student WHERE servlet>70;
				需求： 查询jsp成绩大于等于75，且小于等于90分的学生
					SELECT * FROM student WHERE jsp BETWEEN 75 AND 90; -- (包前包后)
			判空条件(null 空字符串)：  is null / is not null / =''  / <>''
				需求： 查询地址为空的学生（包括null和空字符串）
					null vs  空字符串
						null：表示没有值
						空字符串：有值的！
					SELECT * FROM student WHERE address IS NULL OR address=''; -- （包括null和空字符串）
			 模糊条件： like
				通常使用以下替换标记：
				 % : 表示任意个字符
				 _ : 表示一个字符
				需求： 查询姓‘张’的学生
					SELECT * FROM student WHERE NAME LIKE '李%';
				需求： 查询姓‘李’，且姓名只有两个字的学生
					SELECT * FROM student WHERE NAME LIKE '李_';
			 聚合查询:使用聚合函数的查询
				 常用的聚合函数： sum()  avg()  max()  min()  count()----括号和函数名之间不能有空格
				 需求：查询学生的servlet的总成绩 (sum() :求和函数)
					SELECT SUM(servlet) AS 'servlet的总成绩' FROM student;
				需求： 查询学生的servlet的平均分
					SELECT AVG(servlet) AS 'servlet的平均分' FROM student;
				需求: 查询当前servlet最高分
					SELECT MAX(servlet) AS '最高分' FROM student;
				需求： 查询最低分
					SELECT MIN(servlet) AS '最低分' FROM student;
				需求： 统计当前有多少学生(count(字段))
					SELECT COUNT(*) FROM student;
					SELECT COUNT(id) FROM student;
						注意：count（）函数统计的数量不包含null的数据
						           使用count统计表的记录数，要使用不包含null值的字段
			分页查询（limit 起始行,查询几行）
				起始行从0开始
				分页：当前页  每页显示多少条
				分页查询当前页的数据的sql: SELECT * FROM student LIMIT (当前页-1)*每页显示多少条,每页显示多少条;
			查询排序（order by ）
				默认情况下，按照插入记录顺序排序
				语法 ：order by 字段 asc/desc
					asc: 顺序，正序。数值：递增，字母：自然顺序（a-z）可以省略不写
					desc: 倒序，反序。数值：递减，字母：自然反序(z-a)
				注意：多个排序条件以逗号分隔
				需求： 按照servlet正序，按照jsp的倒序
					SELECT * FROM student ORDER BY servlet ASC,jsp DESC;
			 分组查询(group by)
				需求： 查询男女的人数
					1) 把学生按照性别分组(GROUP BY gender)
					2) 统计每组的人数(COUNT(*))
						SELECT gender,COUNT(*) FROM student GROUP BY gender;
			分组查询后筛选
				需求： 查询总人数大于2的性别
					1) 查询男女的人数
					2）筛选出人数大于2的记录(having)
				注意： 分组之前条件使用where关键字，分组之前条件使用having关键字
					SELECT gender,COUNT(*) FROM student WHERE GROUP BY gender HAVING COUNT(*)>2;


